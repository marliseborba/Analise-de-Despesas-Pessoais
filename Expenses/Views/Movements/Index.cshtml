@model Expenses.Models.ViewModels.MovementViewModel

@{
    ViewData["Title"] = "Movimentações";
}

<br />
<br />
<h2><i class="fa-solid fa-right-left"></i> @ViewData["Title"]</h2>
<br />

<p class="d-inline-flex gap-1">
    <a class="btn btn-outline-primary collapsed" data-bs-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">
        <i class="bi bi-search"></i> Buscar
    </a>
</p>
<div class="collapse" id="collapseExample">
    <div class="card card-body">
        <form asp-action="SearchMovements">
            <div class="row">
                <div class="col-md-6">
                    <label asp-for="MinDate" class="control-label">Início</label>
                    <input type="date" asp-for="MinDate" class="form-control" value="@Model.MinDate.ToString("yyyy-MM-dd")" />
                </div>
                <div class="col-md-6">
                    <label asp-for="MaxDate" class="control-label">Fim</label>
                    <input type="date" asp-for="MaxDate" class="form-control" value="@Model.MaxDate.ToString("yyyy-MM-dd")" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <br />
                    <label class="control-label">Pessoas</label><br />
                    <div class="chkOwns form-control">
                        <ul style="width:100%; list-style-type: none; margin:0; padding:0">
                            @foreach (Owner own in Model.Owners)
                            {
                                <li style="width:50%; float:left">
                                    <label for="SelectedOwns">
                                        <input type="checkbox" id="SelectedOwns" name="owns" checked="@Model.Owns.Any(x => x.Contains(own.Name))" value="@own.Name" /> @own.Name
                                    </label>
                                </li>
                            }
                        </ul>
                        <br/>
                    </div>
                </div>
                <div class="col-md-6"></div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <br/>
                    <label class="control-label">Categorias</label><br />
                    <input class="searchCats form-control" type="text" placeholder="Buscar categoria" id="searchCats" /><br />
                    <div class="chkCats">
                        <ul style="width:100%; list-style-type: none; margin:0; padding:0">
                            @foreach (Category cat in Model.Categories)
                            {
                                <li style="width:50%; float:left">
                                    <label for="SelectedCats">
                                        <input type="checkbox" id="SelectedCats" name="cats" checked="@Model.Cats.Any(x => x.Contains(cat.Name))" value="@cat.Name" /> @cat.Name
                                    </label>
                                </li>
                            }
                        </ul>
                    </div>
                </div>

                <div class="col-md-6">
                    <br />
                    <label class="control-label">Estabelecimentos</label><br />
                    <input class="searchEstabs form-control" type="text" placeholder="Buscar estabelecimento" id="searchEstabs" /><br />
                    <div class="chkEstabs">
                        <ul style="width:100%; list-style-type: none; margin:0; padding:0">
                            @foreach (Establishment est in Model.Establishments)
                            {
                                <li style="width:50%; float:left">
                                    <label for="SelectedEstabs">
                                        <input type="checkbox" id="SelectedEstabs" name="estabs" checked="@Model.Estabs.Any(x => x.Contains(est.Name))" value="@est.Name" /> @est.Name
                                    </label>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
                <div>
                    <br />
                    <button type="submit" class="btn btn-outline-primary">Buscar</button>
                </div>
        </form>
    </div>
</div>

<div class="">

</div>
<br />
<br />
@if (TempData.ContainsKey("saved"))
{
    int saved = (int)TempData["saved"];
    if (saved > 0)
    {
        <div class="alert alert-dismissible alert-success">
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            @if (saved == 1)
            {
                <span><strong>@TempData["saved"] </strong> movimentação foi salva.</span>
            }
            else
            {
                <span><strong>@TempData["saved"] </strong> movimentações foram salvas.</span>
            }
        </div>
    }
    else
    {
        <div class="alert alert-dismissible alert-warning">
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            <span>Nenhuma movimentação foi salva.</span>
        </div>
    }
}

@if (TempData.ContainsKey("catUpdated"))
{
    int catUpdated = (int)TempData["catUpdated"];
    if (catUpdated > 0)
    {
        <div class="alert alert-dismissible alert-success">
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            @if (catUpdated == 1)
            {
                <span><strong>@TempData["catUpdated"] </strong> movimentação teve Categorias atualizadas.</span>
            }
            else
            {
                <span><strong>@TempData["catUpdated"] </strong> movimentações tiveram Categorias atualizadas.</span>
            }
        </div>
    }
}

<table class="table">
    <tr class="table-default">
        <th>
            Movimentações: @Model.Movements.Count()
        </th>
        <th class="text-success">
            Entradas: @Model.Movements.Where(x => x.Value > 0).Sum(x => x.Value).ToString("F2")
        </th>
        <th class="text-danger">
            Saídas: @Model.Movements.Where(x => x.Value < 0).Sum(x => x.Value).ToString("F2")
        </th>
    </tr>
</table>

<table id="myTable" class="table table-hover">
    <thead>
        <tr>
            <th style="border-bottom-color:#444444">
                Autora
            </th>
            <th style="border-bottom-color:#444444">
                Descrição
            </th>
            <th style="border-bottom-color:#444444">
                Data
            </th>
            <th style="border-bottom-color:#444444">
                Valor
            </th>
            <th style="border-bottom-color:#444444">
                Estabelecimento
            </th>
            <th style="border-bottom-color:#444444">
                Categorias
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movements)
        {
            <tr style="border-bottom-color:#444444">
                <td>
                    @Html.DisplayFor(modelItem => item.Owner.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Value)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Establishment.Name)
                </td>
                <td>@{  var count = 1;
                        foreach(var i in item.Categories)
                        {
                            if (count < item.Categories.Count)
                                        @($"{i.Name}{", "}")
                            else
                                        @i.Name;
                            count++;
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<script type ="text/javascript">
    $('#SelectedCats').change(function (e) {
        var optionsVal = [];
        $("#SelectedCats option").each(function () {
            optionsVal.push($(this).val());
        });
        $.ajax({
            type: 'POST',
            traditional: true,
            dataType: "json",
            data: { SelectedSortOrderOptions: optionsVal },
            success: function () {

            },
        });
    });

    $('#SelectedEstabs').change(function (e) {
        var optionsVal = [];
        $("#SelectedEstabs option").each(function () {
            optionsVal.push($(this).val());
        });
        $.ajax({
            type: 'POST',
            traditional: true,
            dataType: "json",
            data: { SelectedSortOrderOptions: optionsVal },
            success: function () {

            },
        });
    });

    $('#SelectedOwns').change(function (e) {
        var optionsVal = [];
        $("#SelectedOwns option").each(function () {
            optionsVal.push($(this).val());
        });
        $.ajax({
            type: 'POST',
            traditional: true,
            dataType: "json",
            data: { SelectedSortOrderOptions: optionsVal },
            success: function () {

            },
        });
    });

    (function ($) {
        $(".searchCats").on('keyup', function (e) {
            var $this = $(this);
            var exp = new RegExp($this.val(), 'i');
            $(".chkCats li label").each(function () {
                var $self = $(this);
                if (!exp.test($self.text())) {
                    $self.parent().hide();
                } else {
                    $self.parent().show();
                }
            });
        });
    })(jQuery);

    (function ($) {
        $(".searchEstabs").on('keyup', function (e) {
            var $this = $(this);
            var exp = new RegExp($this.val(), 'i');
            $(".chkEstabs li label").each(function () {
                var $self = $(this);
                if (!exp.test($self.text())) {
                    $self.parent().hide();
                } else {
                    $self.parent().show();
                }
            });
        });
    })(jQuery);
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#myTable').dataTable({
            "language": {
                "info": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                "infoEmpty": "Não há registros",
                "emptyTable": "Não há registros",
                "infoFiltered": "(filtrado de _MAX_ registros)",
                "lengthMenu": "Mostrar _MENU_ registros",
                "search": "Buscar:",
                "paginate": {
                    "first": "Primeira",
                    "last": "Última",
                    "next": "Próxima",
                    "previous": "Anterior"
                },
                "aria": {
                    "sortAscending": ": clique para organizar em order crescente",
                    "sortDescending": ": clique para organizar em ordem decrescente"
                }
            },

        });
    });
</script>