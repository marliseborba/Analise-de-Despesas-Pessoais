@model Expenses.Models.ViewModels.ChartViewModel

@{
    ViewData["Title"] = "Gráficos";
}

<br />

<h2><i class="bi bi-graph-up"></i> @ViewData["Title"]</h2>
<br />

<p class="d-inline-flex gap-1">
    <a class="btn btn-outline-primary collapsed" data-bs-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">
        <i class="bi bi-search"></i> Buscar
    </a>
</p>
<div class="collapse" id="collapseExample">
    <div class="card card-body">
        <form asp-action="Search">
            <fieldset class="form-group" style="border:1px solid;border-radius:4px;padding:10px">
                <legend style="font-size:16px">Filtros:</legend>
                <div class="row">
                    <div class="col-md-3">
                        <label asp-for="MinDate" class="control-label">Início</label>
                        <input type="date" asp-for="MinDate" class="form-control" value="@Model.MinDate.ToString("yyyy-MM-dd")" />
                    </div>
                    <div class="col-md-3">
                        <label asp-for="MaxDate" class="control-label">Fim</label>
                        <input type="date" asp-for="MaxDate" class="form-control" value="@Model.MaxDate.ToString("yyyy-MM-dd")" />
                    </div>
                    <div class="col-md-6">
                        <label class="control-label">Pessoas</label><br />
                        <div class="chkOwns form-control">
                            <ul style="width:100%; list-style-type: none; margin:0; padding:0">
                                @foreach (Owner own in Model.Owners)
                                {
                                    <li style="width:50%; float:left">
                                        <label for="SelectedOwns">
                                            <input type="checkbox" id="SelectedOwns" name="owns" checked="@Model.Owns.Any(x => x.Contains(own.Name))" value="@own.Name" /> @own.Name
                                        </label>
                                    </li>
                                }
                            </ul>
                            <br />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <br />
                        <label class="control-label">Categorias</label><br />
                        <input class="searchCats form-control" type="text" placeholder="Buscar categoria" id="searchCats" /><br />
                        <div class="chkCats">
                            <ul style="width:100%; list-style-type: none; margin:0; padding:0">
                                @foreach (Category cat in Model.Categories)
                                {
                                    <li style="width:50%; float:left">
                                        <label for="SelectedCats">
                                            <input type="checkbox" id="SelectedCats" name="cats" checked="@Model.Cats.Any(x => x.Contains(cat.Name))" value="@cat.Name" /> @cat.Name
                                        </label>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <br />
                        <label class="control-label">Estabelecimentos</label><br />
                        <input class="searchEstabs form-control" type="text" placeholder="Buscar estabelecimento" id="searchEstabs" /><br />
                        <div class="chkEstabs">
                            <ul style="width:100%; list-style-type: none; margin:0; padding:0">
                                @foreach (Establishment est in Model.Establishments)
                                {
                                    <li style="width:50%; float:left">
                                        <label for="SelectedEstabs">
                                            <input type="checkbox" id="SelectedEstabs" name="estabs" checked="@Model.Estabs.Any(x => x.Contains(est.Name))" value="@est.Name" /> @est.Name
                                        </label>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </fieldset>
            <br />
            <fieldset class="form-group" style="border:1px solid;border-radius:4px;padding:10px">
                <legend style="font-size:16px">Exibição:</legend>
                <div class="row">
                    <div class="col-md-6">
                        <label asp-for="EType" class="control-label"><i class="bi bi-graph-up"></i> Tipo de Gráfico</label>
                        <select asp-for="EType" class="form-control" id="EType">
                            <option>Selecione...</option>
                            <option value="line">Linha</option>
                            <option value="bar">Barra</option>
                            <option value="pie">Pizza</option>
                            <option value="doughnut">Donut</option>
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label asp-for="EData" class="control-label"><i class="bi bi-bar-chart-steps"></i> Separar por</label>
                        <select asp-for="EData" class="form-control">
                            <option>Selecione...</option>
                            <option value="Pessoa">Pessoa</option>
                            <option value="Categoria">Categoria</option>
                            <option value="Estabelecimento">Estabelecimento</option>
                            <option style="visibility:hidden" id="EDataYear" value="Ano">Ano</option>
                            <option style="visibility:hidden" id="EDataMonth" value="Mês">Mês</option>
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6" id="ETime">
                        <br />
                        <label asp-for="ETime" class="control-label"><i class="bi bi-calendar-range"></i> Período</label>
                        <select asp-for="ETime" class="form-control">
                            <option>Selecione...</option>
                            <option>Anos</option>
                            <option>Meses</option>
                        </select>
                    </div>
                </div>
            </fieldset>
            <div>
                <br />
                <button type="submit" class="btn btn-outline-primary">Buscar</button>
            </div>
        </form>
    </div>
</div>


<div class="container d-flex justify-content-center">
    @if (Model.EType != null && (Model.EType.Equals("pie") || Model.EType.Equals("doughnut")))
    {
        @:<div class="col-md-6">
    }
    else
    {
        @:<div class="col-md-12">
    }
        <canvas id="myChart"></canvas>
    </div>
</div>

<br />
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.13/js/bootstrap-multiselect.js" type="text/javascript"></script>
<script src="~/lib/jquery/dist/multiselect.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script type ="text/javascript">

    const ctx = document.getElementById('myChart');

    var chart = new Chart(ctx, @Html.Raw(Model.ChartJ));

    chart.options.scales.yAxis.ticks =
    {
        callback: (val) => {
            return val.toLocaleString("pt-BR", { style: "currency", currency: "BRL" });
        },
        title: "Valor"
    };
    
    chart.options.plugins.tooltip.callbacks =
        {
            label: function (context) {
                let label = context.dataset.label || '';

                if (label) {
                    label += ': ';
                }
                if (context.parsed.y !== null) {
                    label += new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(context.parsed.y);
                }
                return label;
            }
        };

    chart.update();

</script>

<script type="text/javascript">
    const el = document.getElementById('EType');
    const box = document.getElementById('ETime');
    const opY = document.getElementById('EDataYear');
    const opM = document.getElementById('EDataMonth');
    el.addEventListener('change', function handleChange(event) {
        if (event.target.value === 'line' || event.target.value === 'bar') {
            box.style.visibility = 'visible';
            opY.style.visibility = 'hidden';
            opM.style.visibility = 'hidden';
        }
        if (event.target.value === 'pie' || event.target.value === 'doughnut') {
            box.style.visibility = 'hidden';
            opY.style.visibility = 'visible';
            opM.style.visibility = 'visible';
        }
    });

    $('#SelectedCats').change(function (e) {
        var optionsVal = [];
        $("#SelectedCats option").each(function () {
            optionsVal.push($(this).val());
        });
        $.ajax({
            type: 'POST',
            traditional: true,
            dataType: "json",
            data: { SelectedSortOrderOptions: optionsVal },
            success: function () {

            },
        });
    });

    $('#SelectedEstabs').change(function (e) {
        var optionsVal = [];
        $("#SelectedEstabs option").each(function () {
            optionsVal.push($(this).val());
        });
        $.ajax({
            type: 'POST',
            traditional: true,
            dataType: "json",
            data: { SelectedSortOrderOptions: optionsVal },
            success: function () {

            },
        });
    });

    $('#SelectedOwns').change(function (e) {
        var optionsVal = [];
        $("#SelectedOwns option").each(function () {
            optionsVal.push($(this).val());
        });
        $.ajax({
            type: 'POST',
            traditional: true,
            dataType: "json",
            data: { SelectedSortOrderOptions: optionsVal },
            success: function () {

            },
        });
    });

    (function ($) {
        $(".searchCats").on('keyup', function (e) {
            var $this = $(this);
            var exp = new RegExp($this.val(), 'i');
            $(".chkCats li label").each(function () {
                var $self = $(this);
                if (!exp.test($self.text())) {
                    $self.parent().hide();
                } else {
                    $self.parent().show();
                }
            });
        });
    })(jQuery);

    (function ($) {
        $(".searchEstabs").on('keyup', function (e) {
            var $this = $(this);
            var exp = new RegExp($this.val(), 'i');
            $(".chkEstabs li label").each(function () {
                var $self = $(this);
                if (!exp.test($self.text())) {
                    $self.parent().hide();
                } else {
                    $self.parent().show();
                }
            });
        });
    })(jQuery);
</script>
